# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate123

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = $(SHELL) -c "mkdir -p \"$(1)\""
    RM = $(SHELL) -c "rm -rf \"$(1)\""
endif

# Move to the build directory
ifeq (,$(filter .build,$(notdir $(CURDIR))))
.SUFFIXES:
OBJDIR := .build
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = $(MAKE) --no-print-directory -C $(OBJDIR) -f $(mkfile_path) \
		SRCDIR=$(CURDIR) $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))
{% block target_clean -%}
{% endblock %}
else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = {{vpath|join(" ")}}

# Boiler-plate
###############################################################################
# Project settings

PROJECT := {{name}}


# Project settings
###############################################################################
# Objects and Paths

{% for obj in to_be_compiled %}MBED_OBJECTS += {{obj}}
{% endfor %}
{% for obj in object_files %}MBED_SYS_OBJECTS += {{obj}}
{% endfor %}
{% for path in include_paths %}MBED_INCLUDE_PATHS += -I{{path}}
{% endfor %}
MBED_LIBRARY_PATHS :={% for p in library_paths %} -L{{p}} {% endfor %}
MBED_LIBRARIES :={% for lib in libraries %} -l{{lib}} {% endfor %}
MBED_LINKER_SCRIPT := {{linker_script}}
{%- block additional_variables -%}{% endblock %}

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = {{asm_cmd}}
CC      = {{cc_cmd}}
CPP     = {{cppc_cmd}}
LD      = {{ld_cmd}}
ELF2BIN = {{elf2bin_cmd}}
{% if hex_files %}
SREC_CAT = srec_cat
{%- endif %}
{%- block additional_executables -%}{%- endblock %}

{% for flag in c_flags %}MBED_CC_FLAGS += {{flag}}
{% endfor %}
{% for flag in cxx_flags %}MBED_CPPC_FLAGS += {{flag}}
{% endfor %}
{% for flag in asm_flags %}MBED_ASM_FLAGS += {{flag}}
{% endfor %}

MBED_LD_FLAGS :={%- block ld_flags -%} {{ld_flags|join(" ")}} {% endblock %}
{% block sys_libs -%}{%- endblock %}

# Tools and Flags
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################

